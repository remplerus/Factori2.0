plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.13, 6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}


version = '0.0.1'
group = 'com.rempler.factori20'
archivesBaseName = 'factori20'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "parchment", version: "${parchment_version}"
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'factori20'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                factori20 {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runserver')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'factori20'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                factori20 {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('runserver')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'factori20'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                factori20 {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', 'factori20', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                factori20 {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "BlameJared"
        url = "https://maven.blamejared.com"
    }
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://maven.tterrag.com"
    }
    maven {
        url 'https://dogforce-games.com/maven'
    }
}

configurations.all {
    // Check for snapshots more frequently than Gradle's default of 1 day. 0 = every build.
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    minecraft "net.neoforged:forge:${mc_version}-${forge_version}"

    //compiles
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
    compileOnly(fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${mc_version}:${crafttweaker_version}"))
    compileOnly(fg.deobf("com.tterrag.registrate:Registrate:MC${registrate_version}"))
    compileOnly("dev.gigaherz.graph:GraphLib3:3.0.4")
    //implementations
    implementation(fg.deobf("curse.maven:enderio-64578:${enderio_version}"))
    //implementation(fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}"))
    //runtimes
    runtimeOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}"))
    runtimeOnly(fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${mc_version}:${crafttweaker_version}"))
    //runtimeOnly(fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}"))
    //runtimeOnly(fg.deobf("dev.architectury:architectury-forge:${architectury_version}"))
    //annotations
    annotationProcessor 'com.blamejared.crafttweaker:Crafttweaker_Annotation_Processors:3.0.0.15'
    annotationProcessor "net.neoforged:forge:${mc_version}-${forge_version}"
    annotationProcessor "com.blamejared.crafttweaker:CraftTweaker-forge-${mc_version}:${crafttweaker_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "factori20",
                "Specification-Vendor"    : "examplemodsareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

compileJava {
    options.compilerArgs << ("-Acrafttweaker.processor.document.output_directory=${file('src/generated/ctDocs')}" as String)
}
